<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">

	<http auto-config="true" create-session="ifRequired">
		<intercept-url pattern="/welcome*" access="hasRole('ROLE_USER')" />
		<form-login login-page="/login" default-target-url="/welcome"
		username-parameter="j_username"
		password-parameter="j_password"
			authentication-failure-url="/loginfailed" login-processing-url="/j_spring_security_check" />
		<logout logout-success-url="/logout" />
		
		<session-management>
        <concurrency-control max-sessions="1" error-if-maximum-exceeded="true" expired-url="/login"/>
    </session-management>
	</http>

	<authentication-manager>
		<authentication-provider>
<!-- 			<jdbc-user-service data-source-ref="dataSource" -->
				
<!-- 				users-by-username-query=" -->
<!-- 					select username,password, enabled  -->
<!-- 					from users where USERNAME=?"  -->
				
<!-- 				authorities-by-username-query=" -->
<!-- 					select u.username, ur.authority from users u, user_roles ur  -->
<!-- 					where u.user_id = ur.user_id and u.username =?  "  -->
					
<!-- 			/> -->
 <user-service> 
  <user name="dineshonjava" password="sweety" authorities="ROLE_USER" />  
     </user-service> 
		</authentication-provider>
	</authentication-manager>

</beans:beans>
