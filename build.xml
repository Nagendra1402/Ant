<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="full.build">
	<!--Auto generated ant build file-->
	<property file="build.properties" id="buildprop" />
	<property environment="env" />
	<!-- SCHEMA ENDS -->
	<!--Properties for wsdl gen and code gen starts  -->
	<path id="axis2.class.path">
		<fileset dir="${lib.dir}/">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<target name="clean">
		<delete dir="${basedir}/src/config/resources">
		</delete>
		<delete dir="${wsdl.dir}/institutional/">
		</delete>
		<delete file="${acctsetup.wsdl}">
		</delete>
		<delete dir="${src.dir}/com/fmr/xmlns">
		</delete>
		<delete file="${src.dir}/config/WSDLGeneratorConfig.xml">
		</delete>
		
		<delete file="${basedir}/WebContent\WEB-INF\modules\logmodule.mar" />
		<delete>
			<fileset dir="${resources}">
				<exclude name="services.xml" />
			</fileset>
		</delete>
		<delete>
			<fileset dir="${aar.dir}" />
		</delete>
		<delete>
			<fileset dir="${built.war.dir}" />
		</delete>
	</target>
	<target name="build.common">
		<ant antfile="${eca.common.dir}/build.xml" dir="${eca.common.dir}" target="jar" inheritall="false">
			<property name="JIL_version" value="FMR-JIL-3.0_S18" />
		</ant>
	</target>
	<target name="init" depends="build.common">
		<tstamp>
            <format property="build.time" pattern="MM/dd/yyyy HH:mm"/>
        </tstamp>
        <exec dir="." executable="cleartool" outputproperty="cc.stream" failifexecutionfails="false">
            <arg line="lsstream -short"/>
        </exec>
        <exec dir="." executable="cleartool" outputproperty="cc.view" failifexecutionfails="false">
            <arg line="pwv -short"/>
        </exec>
        <echo message="Write build info to file"/>
        <property name="html.br" value="&lt;br/&gt;${line.separator}"/>
        <property name="html.b.open" value="&lt;b&gt;"/>
        <property name="html.b.close" value="&lt;/b&gt;"/>
        <echo message="${html.b.open}Built:${html.b.close} ${build.time} by ${user.name}${html.br}" file="WebContent/BuildInfo"/>
        <echo message="${html.b.open}CC Stream:${html.b.close} ${cc.stream}${html.br}" append="true" file="WebContent/BuildInfo"/>
        <echo message="${html.b.open}CC View:${html.b.close} ${cc.view}${html.br}" append="true" file="WebContent/BuildInfo"/>
		<copy todir="${lib.dir}">
			<fileset dir="${eca.common.dir}/lib">
				<include name="**/*.jar" />
			</fileset>
		</copy>
		<copy todir="${lib.dir}">
			<fileset dir="${eca.common.dir}/../resources/axis2/axis2-1.6.2/lib">
				<include name="**/*.jar" />
			</fileset>
		</copy>
		<copy todir="${lib.dir}">
			<fileset dir="${eca.common.dir}/../resources/j2ee">
				<include name="**/*.jar" />
			</fileset>
		</copy>
		<copy todir="${lib.dir}">
			<fileset dir="${eca.common.dir}/../resources/xml">
				<include name="**/*.jar" />
			</fileset>
		</copy>
		<copy todir="${lib.dir}">
			<fileset dir="${eca.common.dir}/../resources/spring">
				<!-- picks up spring-ws file -->
				<include name="**/*.jar" />
			</fileset>
		</copy>
		<copy todir="${lib.dir}" file="${eca.common.dir}/export/WebServiceCommon.jar" />
		<copy todir="${schema.dir}" preservelastmodified="true" overwrite="true">
			<fileset dir="${eca.common.dir}/src/schema">
				<include name="**/*" />
				<exclude name="**/.copyarea.db" />
			</fileset>
		</copy>
		<copy todir="${schema.dir}" preservelastmodified="true" overwrite="true">
			<fileset dir="${eca.common.dir}/resource/schema">
				<include name="BrokerageHeader.xsd" />
			</fileset>
		</copy>
		
		<copy todir="${config.dir}" preservelastmodified="true" overwrite="true">
			<fileset dir="${eca.common.dir}/../resources/app/externalapi/config">
				<include name="ehcache.xml" />
			</fileset>
		</copy>

		<copy todir="${schema.dir}" preservelastmodified="true" overwrite="true">
			<fileset dir="${eca.common.dir}/resource/schema">
				<include name="**/*" />
				<exclude name="**/*.wsdl" />
				<exclude name="**/.copyarea.db" />
			</fileset>
		</copy>
		<copy todir="${basedir}/WebContent" preservelastmodified="true" overwrite="true">
			<fileset dir="${eca.common.dir}/../resources/jsp">
				<include name="**/*" />
				<exclude name="**/.copyarea.db" />
			</fileset>
		</copy>
		<copy todir="${lib.dir}" preservelastmodified="true" overwrite="true">
			<fileset dir="${eca.common.dir}/../resources/jstl">
				<include name="**/*" />
				<exclude name="**/.copyarea.db" />
			</fileset>
		</copy>
		
		<!-- We need these jars for Entitlement cache implementation -->
		<copy todir="${lib.dir}" file="${slf4-api.jar}" /> 
		<copy todir="${lib.dir}" file="${slf4-log.jar}" />
		
		<mkdir dir="${build.dir.axis.acctsetup}" />
		<mkdir dir="${servlet.classes}" />
		<mkdir dir="${aar.dir}" />
		<!--PLEASE MAKE SURE WE DELETE ALL THE CREATED DIRECTORIES AFTER-WARDS
		THIS  TASK 		WHICH CAN REDUCE COUNT OF CHECKINS
		-->
	</target>
	<target depends="init" name="pre.compile.test">
		<!--Test the classpath for the availability of necesary classes-->
		<available classpathref="axis2.class.path" property="stax.available" classname="javax.xml.stream.XMLStreamReader" />
		<available classpathref="axis2.class.path" property="axis2.available" classname="org.apache.axis2.engine.AxisEngine" />
		<condition property="jars.ok">
			<and>
				<isset property="stax.available" />
				<isset property="axis2.available" />
			</and>
		</condition>
		<!--Print out the availabilities-->
		<echo message="Stax Availability= ${stax.available}" />
		<echo message="Axis2 Availability= ${axis2.available}" />
	</target>
	<target depends="pre.compile.test" name="compile.src" if="jars.ok">
		<!--
			<javac debug="on" memoryMaximumSize="512m" memoryInitialSize="256m" fork="true" destdir="${basedir}/ServletClasses" srcdir="${src}/javax">
				<classpath refid="axis2.class.path" />
				<sourcepath path="src/javax">
			</sourcepath>
			</javac>
			<javac debug="on" memoryMaximumSize="512m" memoryInitialSize="256m" fork="true" destdir="${classes}" srcdir="${src}/generated/src">
			<classpath refid="axis2.class.path" />
		</javac>
		-->
		<javac debug="on" memoryMaximumSize="512m" memoryInitialSize="256m" fork="true" destdir="${servlet.classes}" srcdir="src/javax">
			<classpath refid="axis2.classpath" />
			<sourcepath path="src" />
			<sourcepath path="src/javax" />
		</javac>
		<javac debug="on" memoryMaximumSize="512m" memoryInitialSize="256m" fork="true" destdir="${servlet.classes}" srcdir="${src.dir}">
			<classpath refid="axis2.class.path" />
		</javac>
	</target>
	<target depends="compile.src" name="compile.test" if="jars.ok">
		<javac debug="on" memoryMaximumSize="256m" memoryInitialSize="256m" fork="true" destdir="${basedir}/ServletClasses">
			<src path="${test}" />
			<classpath refid="axis2.class.path" />
		</javac>
	</target>
	<target depends="pre.compile.test" name="acct.setup.classpath.problem" unless="jars.ok">
		<echo message="The class path is not set right!                                Please make sure the following classes are in the classpath                                1. XmlBeans                                2. Stax                                3. Axis2                 " />
	</target>
	<target depends="jar.server, jar.client" name="jar.all" />

	<target depends="compile.src,acct.setup.classpath.problem" name="jar.server" if="jars.ok">
		<copy toDir="${classes}/META-INF" failonerror="false">
			<fileset dir="${resources}">
				<include name="*.xml" />
				<include name="*.wsdl" />
				<include name="*.xsd" />
			</fileset>
		</copy>

		<jar destfile="${aar.dir}/${name.aar}.aar">
			<fileset excludes="**/Test.class" dir="${classes}" />
		</jar>
	</target>
	<target name="LogModuleArchiver">
		<mkdir dir="${basedir}/logmar">
		</mkdir>
		<description>
			This task will create a module archive File
			</description>
		<copy toDir="${basedir}/logmar/META-INF" failonerror="false">
			<fileset dir="${basedir}/src/java">
				<include name="*.xml" />
				<include name="*.wsdl" />
				<include name="*.xsd" />
			</fileset>
		</copy>
		<javac debug="on" memoryMaximumSize="512m" memoryInitialSize="256m" fork="true" destdir="${basedir}/logmar" srcdir="${basedir}/src/java">
			<classpath refid="axis2.class.path" />
			<sourcepath path="${src.dir}" />
			<sourcepath path="${src.dir}/javax" />
			<sourcepath path="${src.dir}/generated/src" />
		</javac>
		<jar destfile="${aar.dir}/logmodule.mar">
			<fileset excludes="**/Test.class" dir="${basedir}/logmar" />
		</jar>
		<copy toDir="${basedir}/WebContent/WEB-INF/modules/" failonerror="false">
			<fileset file="${aar.dir}/logmodule.mar" />
		</copy>

	</target>

	<target name="buildWAR">
		<echo>Generating WAR file...</echo>
		<war destfile="${war.file}" webxml="${basedir}/WebContent/WEB-INF/web.xml">
			<fileset dir="${basedir}/WebContent" />
		</war>
		<echo>Generating WAR file is finished...</echo>
	</target>
	<target if="jars.ok" name="jar.client" depends="compile.src">
		<jar destfile="${lib}/${name}-test-client.jar">
			<fileset dir="${classes}">
				<exclude name="**/META-INF/*.*" />
				<exclude name="**/lib/*.*" />
				<exclude name="**/*MessageReceiver.class" />
				<exclude name="**/*Skeleton.class" />
			</fileset>
		</jar>
	</target>

	<target if="jars.ok" depends="jar.server" name="make.repo">
		<mkdir dir="${build}/repo/" />
		<mkdir dir="${build}/repo/services" />
		<copy file="${build}/lib/${name}.aar" toDir="${build}/repo/services/" />
	</target>
	<target if="jars.ok" depends="make.repo" name="start.server">
		<java fork="true" classname="org.apache.axis2.transport.http.SimpleHTTPServer">
			<arg value="${build}/repo" />
			<classpath refid="axis2.class.path" />
		</java>
	</target>
	<target if="jars.ok" depends="compile.test" name="run.test">
		<path id="test.class.path">
			<pathelement location="${lib}/${name}-test-client.jar" />
			<path refid="axis2.class.path" />
			<pathelement location="${classes}" />
		</path>
		<mkdir dir="${build}/test-reports/" />
		<junit haltonfailure="yes" printsummary="yes">
			<classpath refid="test.class.path" />
			<formatter type="plain" />
			<batchtest fork="yes" toDir="${build}/test-reports/">
				<fileset dir="${test}">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<!-- WAR BUILD STARTS -->
	<target depends="warinit" name="prepare.repo">
		<!-- Copying the axis2 repository from ../repository -->
		<!-- Creating the services.list -->
		<path id="services.archives">
			<fileset dir="${temp}/WEB-INF/services">
				<include name="*.aar" />
			</fileset>
		</path>
		<pathconvert pathsep="${line.separator}" property="echo.services.archives" refid="services.archives">
			<flattenmapper />
		</pathconvert>
		<echo file="${temp}/WEB-INF/services/services.list" message="${echo.services.archives}" />
		<!-- Creating the modules.list -->
		<path id="modules.archives">
			<fileset dir="${temp}/WEB-INF/modules">
				<include name="*.mar" />
			</fileset>
		</path>
		<pathconvert pathsep="${line.separator}" property="echo.modules.archives" refid="modules.archives">
			<flattenmapper />
		</pathconvert>
		<echo file="${temp}/WEB-INF/modules/modules.list" message="${echo.modules.archives}" />
		<!-- Copying the axis2.xml from ../conf -->
		<mkdir dir="${temp}/WEB-INF/conf" />
		<copy file="${war.build.dir}/WEB-INF/conf/axis2.xml" toDir="${temp}/WEB-INF/conf" />
		
	</target>

	<target depends="warinit,prepare.repo" name="acctsetup.war">
		<war destfile="${built.war.dir}/${name.war}.war" webxml="${war.build.dir}/WEB-INF/web.xml">
			<fileset dir="${temp}">
			</fileset>
		</war>
		<delete dir="${servlet.classes}">
		</delete>
		<delete dir="${classes}">
		</delete>
		<delete dir="${temp}">
		</delete>
	</target>

	<target name="warinit">
		<echo message="${basedir}/../../eca_core/resources/app/externalapi/config">
		</echo>
		<copy todir="${basedir}/src/config">
			<fileset dir="${basedir}/../../eca_core/resources/app/externalapi/config">
			</fileset>
		</copy>
		<mkdir dir="${temp}" />
		<copy toDir="${temp}">
			<fileset dir="${war.build.dir}">
				<include name="**/**" />

				<exclude name="**/web.xml" />
			</fileset>
		</copy>
		<copy todir="${temp}/">
			<fileset file="${basedir}/src/config/log4j.xml">
			</fileset>
		</copy>
		<copy todir="${temp}/WEB-INF/classes">
			<fileset dir="${servlet.classes}">
			</fileset>
		</copy>
		<mkdir dir="${temp}/WEB-INF/classes/config" />
		<copy todir="${temp}/WEB-INF/classes/config">
			<fileset dir="${src.dir}/config">
				<exclude name="WSDLGeneratorConfig.xml" />


			</fileset>

		</copy>
		<mkdir dir="${temp}/WEB-INF/classes/schema" />
		<copy todir="${temp}/WEB-INF/classes/schema">
					<fileset dir="${resources}">
						<include name="*.xsd" />
						<exclude name="*.wsdl" />
						<exclude name="*.xml" />
					</fileset>
		</copy>
		
		<echo message="DEPLOYING AAR IN TEMP STARTS" />
		<echo message="${aar.dir}/${name.aar}.aar" />

		<copy file="${aar.dir}/${name.aar}.aar" description="" todir="${temp}/WEB-INF/services/" />
		<echo message="DEPLOYING AAR IN TEMP ENDS" />
	</target>
	<!-- WAR BUILD ENDS -->
	<!-- BUILDING XSD to WSDL and WSDL TO SERVER SIDE CODE STARS-->
	<!-- classpath definitions -->
	<path id="gen.wsdl.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
			<include name="*.jar" />
		</fileset>
	</path>
	<path id="tools.classpath">
		<fileset dir="${tools.dir}">
			<include name="*.jar" />
		</fileset>
	</path>
	
	<target name="CopyTaskWsdlCnfig">
		<copy file="${wsdl.config.file.2012.03}" tofile="${wsdl.config.file}">
		</copy>
	</target>
	<target name="CopyTaskWsdlCnfig201303">
			<copy file="${wsdl.config.file.2013.03}" tofile="${wsdl.config.file}">
			</copy>
	</target>
	<target name="CopyTaskWsdlCnfig201403">
			<copy file="${wsdl.config.file.2014.03}" tofile="${wsdl.config.file}">
			</copy>
	</target>
	<target name="CopyTaskWsdlCnfig201409">
			<copy file="${wsdl.config.file.2014.09}" tofile="${wsdl.config.file}">
			</copy>
	</target>
	<target name="deleteWsdlConfig">
		<echo message="Deleting ${wsdl.config.file}" ></echo>
			<delete file="${wsdl.config.file}">
			</delete >
		<echo message="Deleted ${wsdl.config.file}" ></echo>
	</target>
	<target name="deleteWsdlConfig201403">
		<echo message="Deleting ${wsdl.config.file}" ></echo>
			<delete file="${wsdl.config.file}">
			</delete >
		<echo message="Deleted ${wsdl.config.file}" ></echo>
	</target>
	<target name="deleteWsdlConfig201409">
		<echo message="Deleting ${wsdl.config.file}" ></echo>
			<delete file="${wsdl.config.file}">
			</delete >
		<echo message="Deleted ${wsdl.config.file}" ></echo>
	</target>
	<target name="gen.acctSetup.wsdl" depends="acctsetup.wsdl.check" unless="acctsetup.wsdl.uptodate">
		<antcall target="gen.wsdl">
			<param name="service" value="AccountMaint" />
			<param name="portname" value="AccountMaint" />
			<param name="opargs" value="-operation AccountSetup:ao" />
			<param name="headerOut" value="AccountSetup:ao|ExternalPrincipalIdentity:epi|ExternalProcessingDirectives:epd" />
		</antcall>
		<echo message="save generated wsdl" />
		<copy todir="${wsdl.dir}">
			<fileset dir="${acctpos.schema.dir}">
				<include name="**/*.xsd" />
			</fileset>
		</copy>

	</target>
	<target name="acctsetup.wsdl.check">
		<echo message="acctsetup.wsdl.check" />
		<condition property="acctsetup.wsdl.uptodate">
			<uptodate targetfile="${acctsetup.wsdl}">
				<srcfiles file="${acctpos.schema.file}" />
				<srcfiles file="${acctpos.error.schema}" />
				<srcfiles file="${external.principal.identity.schema}" />
				<srcfiles file="${external.processing.directives.schema}" />
				<srcfiles file="${src.dir}/config/WSDLGeneratorConfig.xml" />
			</uptodate>
		</condition>

		<echo message="~~~~~~~~~~~~~~~~~~~~~~~" />
	</target>
	<!-- - - - - - - - - - - - - - - - - - 
		          target: gen.wsdl
		  - - - - - - - - - - - - - - - - - -->
	<target name="gen.wsdl">
		<echo message="WSTK generating WSDL for ${service}" />
		<java taskname="WSDLGenerator" classname="com.fmr.commons.webservices.wsdlgenerator.WSDLGenerator" classpathref="gen.wsdl.classpath" fork="true" failonerror="true" dir="${wsdl.dir}">
			<sysproperty key="log4j.configuration" value="file:${basedir}/log4j.properties" />
			<arg line="-config ${basedir}/src/config" />
			<arg line="-serviceName ${service}" />
			<arg line="${opargs}" />
			<!--<arg line="-headerOut ${headerOut}"/> -->
			<arg line="-port ${portname}" />
			<arg line="-modifyForCodeGeneration True" />
			<arg line="-debug True" />
		</java>
	</target>
	<!-- ECHO SERVICE ANT TASK ENDS-->
	<!--WSDL TO JAVA STARTS -->
	<echo message="${acctsetup.wsdl}" />
	<path id="axis2.classpath">

		<fileset dir="${lib.dir}/">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<target name="declare">
		<taskdef name="codegen" classname="org.apache.axis2.tool.ant.AntCodegenTask" classpathref="axis2.classpath" />
		<taskdef name="java2WSDL" classname="org.apache.axis2.tool.ant.Java2WSDLTask" classpathref="axis2.classpath" />
	</target>
	
	<target name="WSDL2Java" depends="declare">
		<echo message="The Input WSDL PATH: ${acctsetup.wsdl}" />
		<echo message="Output classes path: ${project.base.dir}" />
		<codegen 
			overwrite="false" 
			skipwsdl="false" 
			unwrap="true" 
			wsdlfilename="${acctsetup.wsdl}" 
			output="${project.base.dir}" 
			serverside="true" 
			generateservicexml="true" 
			backwardcompatible="true" 
			skipbuildxml="true" 
			namespacetopackages="			
			http://xmlns.fmr.com/institutional/common/headers/2011/12/ExternalPrincipalIdentity=com.fmr.xmlns.institutional.common.headers._2011._12.epi,
			http://xmlns.fmr.com/institutional/common/headers/2011/12/ExternalProcessingDirectives=com.fmr.xmlns.institutional.common.headers._2011._12.epd" />
		<echo message="Copying modified files to generated source" />
	</target>
	<!-- WSDL TO CLIENT SIDE JAVA START-->
	<target name="WSDL2JavaAcctMaintClient" depends="declare">
		<echo message="The Input WSDL PATH: ${acct.setup.wsdl.url}/AccountSetup.wsdl" />
		<echo message="Output classes path: ${build.dir.acct.setup.client}" />
		<codegen overwrite="false" skipwsdl="false" wsdlfilename="${acct.setup.wsdl.url}/AccountSetup.wsdl" output="2012javadelete" serverside="false" generateservicexml="true" backwardcompatible="false" skipbuildxml="true" unpackclasses="true" namespacetopackages="			
				http://xmlns.fmr.com/institutional/cam/message/2011/12/AcctSetup=com.fmr.xmlns.institutional.api.message._2012._03.accountmaint,http://xmlns.fmr.com/institutional/cam/message/2011/12/AcctSetup/ServiceContracts=com.fmr.xmlns.institutional.api.message._2012._03.accountmaint" />
		<echo message="Copying modified files to generated source" />
	</target>

	<target name="WSDL2Java201212" depends="declare">
		<echo message="Output classes path: ${project.base.dir}" />
		<codegen overwrite="false" 
			skipwsdl="false" unwrap="true" 
			wsdlfilename="${acctsetup.wsdl.12.2012}" 
			output="${project.base.dir}" 
			serverside="true" 
			generateservicexml="true" 
			backwardcompatible="true" 
			skipbuildxml="true" 
			namespacetopackages="			
					http://xmlns.fmr.com/institutional/common/headers/2011/12/ExternalPrincipalIdentity=com.fmr.xmlns.institutional.common.headers._2011._12.epi,
					http://xmlns.fmr.com/institutional/common/headers/2011/12/ExternalProcessingDirectives=com.fmr.xmlns.institutional.common.headers._2011._12.epd" />
		<echo message="Copying modified files to generated source ${project.base.dir}/src/com/fmr/xmlns/institutional/api/message/_2012/_12/accountmaint/" />

		<copy todir="${project.base.dir}/src/com/fmr/xmlns/institutional/api/message/_2012/_12/accountmaint/" file="${project.base.dir}/generated/accountmaint/AccountSetupRequest.java">
		</copy >
		<echo message="AccountSetup request copied" />
	</target>

	<target name="WSDL2JavaAcctMaintClient12" depends="declare">
		<echo message="The Input WSDL PATH: ${acct.setup.wsdl.url}/AccountSetup.wsdl" />
		<echo message="Output classes path: ${build.dir.acct.setup.client}" />
		<codegen overwrite="false" skipwsdl="false" wsdlfilename="${basedir}/src/producerwsdl/AccountSetup12.wsdl" output="2012javadelete" serverside="false" generateservicexml="true" backwardcompatible="false" skipbuildxml="true" unpackclasses="true" namespacetopackages="			
					http://xmlns.fmr.com/institutional/cam/message/2011/12/AcctSetup=com.fmr.xmlns.institutional.api.message._2012._12.accountmaint" />
		<echo message="Copying modified files to generated source" />
	</target>

	<!-- 2013  03 wsdl gen, new version Start -->
	<target name="gen.accountMaint.2013.03" depends="acctsetup.wsdl.check.2013.03" unless="acctsetup.wsdl.uptodate.2013.03">
		<antcall target="gen.wsdl">
			<param name="service" value="AccountMaint" />
			<param name="portname" value="AccountMaint201303" />
			<param name="opargs" value="-operation AccountSetup:ao" />
			<param name="headerOut" value="AccountSetup:ao|ExternalPrincipalIdentity:epi|ExternalProcessingDirectives:epd" />
		</antcall>
		<echo message="save generated wsdl" />
		<copy todir="${wsdl.dir}">
			<fileset dir="${acctpos.schema.dir}">
				<include name="**/*.xsd" />
			</fileset>
		</copy>
	</target>

	<target name="acctsetup.wsdl.check.2013.03">
		
		<echo message="acctsetup.wsdl.check.2013.03" />
		<condition property="acctsetup.wsdl.uptodate.2013.03">
			<uptodate targetfile="${acctsetup.wsdl.03.2013}">
				<srcfiles file="${acctpos.schema.file.13_03}" />
				<srcfiles file="${acctpos.error.schema}" />
				<srcfiles file="${external.principal.identity.schema}" />
				<srcfiles file="${external.processing.directives.schema}" />
				<srcfiles file="${src.dir}/config/WSDLGeneratorConfig" />
			</uptodate>
		</condition>
		<echo message="~~~~~~~~~~~~~~~~~~~~~~~" />
	</target>
		<!-- 2013  03 wsdl gen, new version END-->
	
	<!-- 2014  03 wsdl gen, new version Start -->
	<target name="gen.accountMaint.2014.03" depends="acctsetup.wsdl.check.2014.03" unless="acctsetup.wsdl.uptodate.2014.03">
		<antcall target="gen.wsdl">
			<param name="service" value="AccountMaint" />
			<param name="portname" value="AccountMaint201403" />
			<param name="opargs" value="-operation AccountSetup:ao" />
			<param name="headerOut" value="AccountSetup:ao|ExternalPrincipalIdentity:epi|ExternalProcessingDirectives:epd" />
		</antcall>
		<echo message="save generated wsdl" />
		<copy todir="${wsdl.dir}">
			<fileset dir="${acctpos.schema.dir}">
				<include name="**/*.xsd" />
			</fileset>
		</copy>
	</target>

	<target name="acctsetup.wsdl.check.2014.03">
		<echo message="acctsetup.wsdl.check.2014.03" />
		<condition property="acctsetup.wsdl.uptodate.2014.03">
			<uptodate targetfile="${acctsetup.wsdl.03.2014}">
				<srcfiles file="${acctpos.schema.file.14_03}" />
				<srcfiles file="${acctpos.error.schema}" />
				<srcfiles file="${external.principal.identity.schema}" />
				<srcfiles file="${external.processing.directives.schema}" />
				<srcfiles file="${src.dir}/config/WSDLGeneratorConfig" />
			</uptodate>
		</condition>
		<echo message="~~~~~~~~~~~~~~~~~~~~~~~" />
	</target>

	<!-- 2014  03 wsdl gen, new version END-->


	<!-- 2014  09 wsdl gen, new version Start -->
	<target name="gen.accountMaint.2014.09" depends="acctsetup.wsdl.check.2014.03" unless="acctsetup.wsdl.uptodate.2014.09">
		<antcall target="gen.wsdl">
			<param name="service" value="AccountMaint" />
			<param name="portname" value="AccountMaint201409" />
			<param name="opargs" value="-operation AccountSetup:ao" />
			<param name="headerOut" value="AccountSetup:ao|ExternalPrincipalIdentity:epi|ExternalProcessingDirectives:epd" />
		</antcall>
		<echo message="save generated wsdl" />
		<copy todir="${wsdl.dir}">
			<fileset dir="${acctpos.schema.dir}">
				<include name="**/*.xsd" />
			</fileset>
		</copy>
	</target>

	<target name="acctsetup.wsdl.check.2014.09">
		<echo message="acctsetup.wsdl.check.2014.09" />
		<condition property="acctsetup.wsdl.uptodate.2014.09">
			<uptodate targetfile="${acctsetup.wsdl.09.2014}">
				<srcfiles file="${acctpos.schema.file.14_09}" />
				<srcfiles file="${acctpos.error.schema}" />
				<srcfiles file="${external.principal.identity.schema}" />
				<srcfiles file="${external.processing.directives.schema}" />
				<srcfiles file="${src.dir}/config/WSDLGeneratorConfig" />
			</uptodate>
		</condition>
		<echo message="~~~~~~~~~~~~~~~~~~~~~~~" />
	</target>

	<!-- 2014  09 wsdl gen, new version END-->
	
	<!--WSDL2JAVA for 2013 03 WSDL start  -->
	<target name="WSDL2Java.2013.03" depends="declare">
		<echo message="WSDL2JAVA201303 IS STARTED" />
		<codegen 
			overwrite="false" 
			skipwsdl="false" 
			unwrap="true" 
			wsdlfilename="${acctsetup.wsdl.03.2013}" 
			output="${project.base.dir}" 
			serverside="true" 
			generateservicexml="true" 
			backwardcompatible="true" 
			skipbuildxml="true" 
			namespacetopackages="			
					http://xmlns.fmr.com/institutional/common/headers/2011/12/ExternalPrincipalIdentity=com.fmr.xmlns.institutional.common.headers._2011._12.epi,
					http://xmlns.fmr.com/institutional/common/headers/2011/12/ExternalProcessingDirectives=com.fmr.xmlns.institutional.common.headers._2011._12.epd" />
		<echo message="WSDL2JAVA201303 IS COMPLETED" />
		<!-- -->
	</target>
	<!--WSDL2JAVA for 2013 03 WSDL end -->
	
	<!--WSDL2JAVA for 2014 03 WSDL start  -->
	<target name="WSDL2Java.2014.03" depends="declare">
		<echo message="WSDL2JAVA201403 IS STARTED" />
		<codegen 
			overwrite="false" 
			skipwsdl="false" 
			unwrap="true" 
			wsdlfilename="${acctsetup.wsdl.03.2014}" 
			output="${project.base.dir}" 
			serverside="true" 
			generateservicexml="true" 
			backwardcompatible="true" 
			skipbuildxml="true" 
			namespacetopackages="			
					http://xmlns.fmr.com/institutional/common/headers/2011/12/ExternalPrincipalIdentity=com.fmr.xmlns.institutional.common.headers._2011._12.epi,
					http://xmlns.fmr.com/institutional/common/headers/2011/12/ExternalProcessingDirectives=com.fmr.xmlns.institutional.common.headers._2011._12.epd" />
		<echo message="WSDL2JAVA201403 IS COMPLETED" />
		<!-- -->
	</target>
	<!--WSDL2JAVA for 201403 WSDL end -->
	
	<!--WSDL2JAVA for 201409 WSDL start  -->
	<target name="WSDL2Java.2014.09" depends="declare">
		<echo message="WSDL2JAVA201409 IS STARTED" />
		<codegen 
			overwrite="false" 
			skipwsdl="false" 
			unwrap="true" 
			wsdlfilename="${acctsetup.wsdl.09.2014}" 
			output="${project.base.dir}" 
			serverside="true" 
			generateservicexml="true" 
			backwardcompatible="true" 
			skipbuildxml="true" 
			namespacetopackages="			
					http://xmlns.fmr.com/institutional/common/headers/2011/12/ExternalPrincipalIdentity=com.fmr.xmlns.institutional.common.headers._2011._12.epi,
					http://xmlns.fmr.com/institutional/common/headers/2011/12/ExternalProcessingDirectives=com.fmr.xmlns.institutional.common.headers._2011._12.epd" />
		<echo message="WSDL2JAVA201409 IS COMPLETED" />
		<!-- -->
	</target>
	<!--WSDL2JAVA for 201409 WSDL end -->
		
	
	<!--WSDL2JAVA 2013 Client Start -->
	<target name="WSDL2JavaAcctMaintClient13" depends="declare">
		<echo message="WSDL2JAVA 2013 Client Start" />

		<codegen overwrite="false" skipwsdl="false" wsdlfilename="${basedir}/src/producerwsdl/AccountSetup13.wsdl" output="${build.dir.acct.setup.client}" serverside="false" generateservicexml="true" backwardcompatible="false" skipbuildxml="true" unpackclasses="true" namespacetopackages="http://xmlns.fmr.com/institutional/cam/message/2013/03/AcctSetup=com.fmr.xmlns.institutional.api.message._2013._03.accountmaint" />
		<echo message="WSDL2JAVA 2013 Client End" />
	</target>
	<!--WSDL2JAVA 2013 Client End  -->

   <!--WSDL2JAVA 201403 Client Start -->
	<target name="WSDL2JavaAcctMaintClient201403" depends="declare">
		<echo message="WSDL2JAVA201403Client Start" />

		<codegen overwrite="false" skipwsdl="false" wsdlfilename="${basedir}/src/producerwsdl/AccountSetup_v201403.wsdl" output="${build.dir.acct.setup.client}" serverside="false" generateservicexml="true" backwardcompatible="false" skipbuildxml="true" unpackclasses="true" namespacetopackages="http://xmlns.fmr.com/institutional/cam/message/2014/03/AcctSetup=com.fmr.xmlns.institutional.api.message._2014._03.accountmaint" />
		<echo message="WSDL2JAVA 201403 Client End" />
	</target>
	<!--WSDL2JAVA 201403 Client End  -->

	<!--WSDL2JAVA 201409 Client Start -->
	<target name="WSDL2JavaAcctMaintClient201409" depends="declare">
		<echo message="WSDL2JAVA201409Client Start" />

		<codegen overwrite="false" 
			skipwsdl="false" 
			wsdlfilename="${basedir}/src/producerwsdl/AccountSetup_v201409.wsdl" 
			output="${build.dir.acct.setup.client}" 
			serverside="false" 
			generateservicexml="true" 
			backwardcompatible="false" 
			skipbuildxml="true" 
			unpackclasses="true" 
			/>
			<echo message="WSDL2JAVA201409Client 201409 Client End" />
		</target>
		<!--WSDL2JAVA 201409 Client End  -->
	
	<target name="full.build1" depends="init,gen.acctSetup.wsdl,WSDL2Java,WSDL2Java201212,WSDL2Java.2013.03,jar.server,LogModuleArchiver,acctsetup.war" />
	<target name="full.build" depends="init,CopyTaskWsdlCnfig,gen.acctSetup.wsdl,WSDL2Java,WSDL2Java201212,wsdlgen201303,wsdlgen201403,wsdlgen201409,jar.server,LogModuleArchiver,acctsetup.war" />
	<target name="wsdlgen201212" depends="init,gen.acctSetup.wsdl,WSDL2Java" />
	<target name="wsdlgen201303" depends="deleteWsdlConfig,CopyTaskWsdlCnfig201303,gen.accountMaint.2013.03,WSDL2Java.2013.03" />
	<target name="wsdlgen201403" depends="deleteWsdlConfig201403,CopyTaskWsdlCnfig201403,gen.accountMaint.2014.03,WSDL2Java.2014.03" />
	<target name="wsdlgen201409" depends="deleteWsdlConfig201409,CopyTaskWsdlCnfig201409,gen.accountMaint.2014.09,WSDL2Java.2014.09" />
	
	<target name="wsdlconfigCopy201203" depends="CopyTaskWsdlCnfig" />
	<target name="wsdl.gen.2012.03" depends="init,CopyTaskWsdlCnfig,gen.acctSetup.wsdl,WSDL2Java"/>
	<property name="tomcat.home" Value="C:\Program Files\Apache Software Foundation\Tomcat 6.0\" />
	<property name="tomcat.aar" Value="C:\Program Files\Apache Software Foundation\Tomcat 6.0\webapps\apipositions\WEB-INF\services\" />

	<target name="deploy">
		<echo message="DEPLOYING IN TOMCAT SERVER STARTS" />
		<delete file="${tomcat.home}/webapps/${name.war}.war">
		</delete>
		<delete dir="${tomcat.home}/webapps/${name.war}">
		</delete>
		<copy file="${built.war.dir}/${name.war}.war" description="" todir="${tomcat.home}/webapps/" />
		<echo message="DEPLOYING IN TOMCAT SERVER ENDS" />
	</target>
</project>
